import MetaTrader5 as mt5
from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
import logging
import time

# Configure logging
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)
logger = logging.getLogger(__name__)

# Your MetaTrader credentials
mt5.initialize()
symbol = "EURUSD"  # Default trading symbol
lot_size = 0.1      # Default lot size

# Telegram bot token
TELEGRAM_TOKEN = 'YOUR_TELEGRAM_BOT_TOKEN'

# Function to handle received signals
def parse_signal(text):
    """Parse the trading signal message"""
    parts = text.split()
    
    if len(parts) != 3:
        return None

    direction, pair, price = parts
    try:
        price = float(price)
    except ValueError:
        return None

    if direction not in ['BUY', 'SELL']:
        return None

    return direction, pair, price

# Function to execute the trade
def execute_trade(direction, pair, price):
    """Execute the trade in MetaTrader based on the signal"""
    if not mt5.symbol_info(pair):
        print(f"Symbol {pair} is not available.")
        return

    # Check if price is valid
    if price <= 0:
        print(f"Invalid price: {price}")
        return

    if direction == 'BUY':
        order_type = mt5.ORDER_TYPE_BUY
    elif direction == 'SELL':
        order_type = mt5.ORDER_TYPE_SELL

    # Create an order request
    request = {
        "action": mt5.TRADE_ACTION_DEAL,
        "symbol": pair,
        "volume": lot_size,
        "type": order_type,
        "price": price,
        "sl": 0,  # No stop loss
        "tp": 0,  # No take profit
        "deviation": 10,  # Max deviation
        "magic": 234000,  # Unique magic number
        "comment": "Telegram Signal",
        "type_filling": mt5.ORDER_FILLING_IOC,
        "type_time": mt5.ORDER_TIME_GTC
    }

    # Send the order request to MetaTrader
    result = mt5.order_send(request)
    if result.retcode != mt5.TRADE_RETCODE_DONE:
        print(f"Error executing order: {result.retcode}")
    else:
        print(f"Trade executed successfully: {direction} {pair} at {price}")

# Telegram handler for incoming messages
def handle_message(update: Update,
